<!DOCTYPE html>
<html lang="zxx" class="no-js">

<head>
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Favicon-->
    <link rel="shortcut icon" href="img/fav.png">
    <!-- Author Meta -->
    <meta name="author" content="CodePixar">
    <!-- Meta Description -->
    <meta name="description" content="">
    <!-- Meta Keyword -->
    <meta name="keywords" content="">
    <!-- meta character set -->
    <meta charset="UTF-8">
    <!-- Site Title -->
    <title>ProGear</title>
    <!--
			CSS
			============================================= -->
    <link rel="stylesheet" href="css/linearicons.css">
    <link rel="stylesheet" href="css/font-awesome.min.css">
    <link rel="stylesheet" href="css/themify-icons.css">
    <link rel="stylesheet" href="css/bootstrap.css">
    <link rel="stylesheet" href="css/owl.carousel.css">
    <link rel="stylesheet" href="css/nice-select.css">
    <link rel="stylesheet" href="css/nouislider.min.css">
    <link rel="stylesheet" href="css/ion.rangeSlider.css" />
    <link rel="stylesheet" href="css/ion.rangeSlider.skinFlat.css" />
    <link rel="stylesheet" href="css/main.css">
    <link rel="stylesheet" href="css/form-style.css">

    <style>
        .grid-view {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Adjust the column width as needed */
    gap: 30px; /* Adjust the gap between items */
}

.grid-item {
    border: 1.7px solid #e47312;
    border-radius: 5px;
    background-color:white;
    padding: 30px;
}
#btn {

    min-width: 160px;
    padding: 10px 25px;
    transition: all 300ms ease;
    color: #fff;
    font-weight: 500;
    text-align:center;
    letter-spacing: 1px;
    background-color: #e47312;
    border: 0;
    cursor: pointer;
    margin-right: 10px;
}

#btn:hover {
    background-color: #e98a38;
}
    </style>
</head>

<body>

    <!-- Start Header Area -->
		<%- include('../layouts/userHeader.ejs') %>
	<!-- End Header Area -->

     <!--================Blog Area =================-->

    <section class="blog_area single-post-area section_gap">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 posts-list">
                    <div class="comments-area">
                        <h4>Address</h4>
                        
                        <div class="comment-list grid-view"> <!-- Updated class "grid-view" -->
                            <% addressDetails.forEach((address) => { %>
                            <div class="single-comment grid-item"> <!-- Updated class "grid-item" -->
                                <div class="user justify-content-between d-flex">
                                    <div class="desc">
                                        <h5>Name : <%= address.name %></h5>
                                        <h5>Number : <%= address.number %></h5>
                                        <h5>Address : <%= address.houseAddress %></h5>
                                        <h5>City : <%= address.city %></h5>
                                        <h5>Street : <%= address.street %></h5>
                                        <p>Pin : <%= address.pin %></p>
                                    </div>
                                </div>
                                <section class="intro">
                                    <a class="btn-rply" id="btn" data-address-id="<%= address %>">Edit</a>
                                    
                                    <div class="popup-wrapper">
                                        <div class="popup">
                                            <button class="close-btn"></button>
                                            <form class="popup-form" onsubmit="editAddresss(event)">
                                                <h2 class="popup-form__title">Edit Address</h2>
                                                <input type="hidden" class="popup-form__input" name="id" value="<%= address.id %>" id="editid">

                                                <input type="text" class="popup-form__input" value="<%= address.name %>" name="name" id="editname" >
                                                <input type="number" class="popup-form__input" value="<%= address.number %>" name="number" id="editnumber">
                                                <textarea class="popup-form__input" name="houseadd" id="edithouseAdd"  ><%= address.houseAddress %></textarea>
                                                <input type="text" class="popup-form__input" value="<%= address.city %>" name="city" id="editcity" >
                                                <input type="text" class="popup-form__input" value="<%= address.street %>" name="street" id="editstreet" >
                                                <input type="number" class="popup-form__input" value="<%= address.pin %>" name="pin" id="editpin" >

                                                <button type="submit" class="popup-form__submit">Save</button>
                                            </form>
                                        </div>
                                    </div>
                                <a  id="btn" href="/deleteAddress?id=<%= address.id %>" >Delete</a>  
                                </section>

                            </div>
                            <% }); %>
                        </div>
                        <section class="intro">
                            <div style="margin-top: 30px;">
                                <a id="btn" class="btn-rply">Add New Address</a>

                            </div>
                            
                            <div class="popup-wrapper">
                                <div class="popup">
                                    <button class="close-btn"></button>
                                    <form class="popup-form" onsubmit="saveAddressedit(event)">
                                        <h2 class="popup-form__title">Add Address</h2>
                                        <input type="text" class="popup-form__input" placeholder="Name" name="name" id="nameInput">
                                        <input type="number" class="popup-form__input" placeholder="Mobile Number" name="number" id="mobileNumberInput">
                                        <textarea class="popup-form__input" placeholder="House Address" name="houseadd" id="addressInput"></textarea>
                                        <input type="text" class="popup-form__input" placeholder="City" name="city" id="cityInput">
                                        <input type="text" class="popup-form__input" placeholder="Street" name="street" id="localityInput">
                                        <input type="number" class="popup-form__input" placeholder="PostalCode/PIN" name="pin" id="pincodeInput">
                                        <button type="submit" class="popup-form__submit" >ADD</button>
                                    </form>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <!--================Blog Area =================-->

    <!-- start footer Area -->
    	<%- include('../layouts/userFooter.ejs') %>
    <!-- End footer Area -->

    <script src="js/vendor/jquery-2.2.4.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
	 crossorigin="anonymous"></script>
	<script src="js/vendor/bootstrap.min.js"></script>
	<script src="js/jquery.ajaxchimp.min.js"></script>
	<script src="js/jquery.nice-select.min.js"></script>
	<script src="js/jquery.sticky.js"></script>
    <script src="js/nouislider.min.js"></script>
	<script src="js/jquery.magnific-popup.min.js"></script>
	<script src="js/owl.carousel.min.js"></script>
	<!--gmaps Js-->
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
	<script src="js/gmaps.min.js"></script>
	<script src="js/main.js"></script>

    <script>
                
        let popup = document.querySelector(".popup-wrapper");
        let popupForm = document.querySelector(".popup-form");
        let popupBtn = document.querySelector(".popup-open");
        let popupClose = document.querySelector(".close-btn");

        popupBtn.addEventListener("click", (e) => {
            e.preventDefault;
            showPopup();
        });

        popupClose.addEventListener("click", (e) => {
            e.preventDefault;
            removePopup();
        });

        popupForm.addEventListener("submit", () => {
            removePopup();
        });

        popup.addEventListener("click", (e) => {
            let target = e.target;
            if (target.classList.contains("popup-wrapper")) {
                removePopup();
            } else return;
        });

        function showPopup() {
            popup.classList.add("active");
            bodyScroll();
        }

        function removePopup() {
            popup.classList.remove("active");
            bodyScroll();
        }

        function bodyScroll() {
            document.body.classList.toggle("no-scroll");
        }
    </script>
    <script>
    // Get references to the elements
    let popupWrappers = document.querySelectorAll(".popup-wrapper");
    let popupForms = document.querySelectorAll(".popup-form");
    let popupBtns = document.querySelectorAll(".btn-rply");
    let popupCloses = document.querySelectorAll(".close-btn");

    // Add event listeners to each popup button
    popupBtns.forEach((btn, index) => {
        btn.addEventListener("click", (e) => {
            e.preventDefault();
            showPopup(index);
        });
    });

    // Add event listeners to each popup close button
    popupCloses.forEach((closeBtn, index) => {
        closeBtn.addEventListener("click", (e) => {
            e.preventDefault();
            removePopup(index);
        });
    });

    // Add event listeners to each popup form
    popupForms.forEach((form) => {
        form.addEventListener("submit", () => {
            // Implement your form submission logic here
            removePopup();
        });
    });

    // Add event listeners to each popup wrapper
    popupWrappers.forEach((wrapper, index) => {
        wrapper.addEventListener("click", (e) => {
            let target = e.target;
            if (target.classList.contains("popup-wrapper")) {
                removePopup(index);
            } else {
                return;
            }
        });
    });

    function showPopup(index) {
        popupWrappers[index].classList.add("active");
        bodyScroll();
    }

    function removePopup(index) {
        popupWrappers[index].classList.remove("active");
        bodyScroll();
    }

    function bodyScroll() {
        document.body.classList.toggle("no-scroll");
    }
</script>


<script>
    // }
            function saveAddressedit(event) {
                event.preventDefault(); // Prevent form submission and page refresh
        // Get references to the input fields
        const nameInput = document.getElementById('nameInput');
        const mobileNumberInput = document.getElementById('mobileNumberInput');
        const addressInput = document.getElementById('addressInput');
        const cityInput = document.getElementById('cityInput');
        const localityInput = document.getElementById('localityInput');
        const pincodeInput = document.getElementById('pincodeInput');

        // Get the values from the input fields
        const name = nameInput.value.trim();
        const mobileNumber = mobileNumberInput.value.trim();
        const address = addressInput.value.trim();
        const city = cityInput.value.trim();
        const locality = localityInput.value.trim();
        const pincode = pincodeInput.value.trim();

        function validate(name, mobileNumber, address, city, locality, pincode) {
            // Perform validation
            if (name === '') {
            alert('Please enter a name.');
            return false;
            }

            if (mobileNumber === '') {
            alert('Please enter a mobile number.');
            return false;
            }

            if (address === '') {
            alert('Please enter a house address.');
            return false;
            }

            if (city === '') {
            alert('Please enter a city.');
            return false;
            }

            if (locality === '') {
            alert('Please enter a street.');
            return false;
            }

            if (pincode === '') {
            alert('Please enter a postal code/PIN.');
            return false;
            }

            return true;
        }

        if (validate(name, mobileNumber, address, city, locality, pincode)) {
            // Create an object with the form data
            const formData = {
            name: name,
            number: mobileNumber,
            houseAddress: address,
            city: city,
            street: locality,
            pin: pincode
            };

            // Send the form data to the server using AJAX
            fetch('/addNewAddress', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
            })
            //   .then(response => response.json())
            .then((response)=>{
                response.json()
                location.reload()
                

            })
            .then(data => {
                // Handle the server response
                // ...
            })
            .catch(error => {
                // Handle any error that occurred during the request
                console.error('Error:', error);
            });
            

            // Prevent the default form submission
            return false;
        }
        }
    </script>

<script>
            function editAddresss(event) {
            event.preventDefault(); // Prevent form submission and page refresh
    // Get references to the input fields
    const id = document.getElementById("editid").value;

    const nameInput = document.getElementById('editname');
    const mobileNumberInput = document.getElementById('editnumber');
    const addressInput = document.getElementById('edithouseAdd');
    const cityInput = document.getElementById('editcity');
    const localityInput = document.getElementById('editstreet');
    const pincodeInput = document.getElementById('editpin');

    // Get the values from the input fields

    const name = nameInput.value.trim();
    const mobileNumber = mobileNumberInput.value.trim();
    const address = addressInput.value.trim();
    const city = cityInput.value.trim();
    const locality = localityInput.value.trim();
    const pincode = pincodeInput.value.trim();

    function validate(name, mobileNumber, address, city, locality, pincode) {
        // Perform validation
        if (name === '') {
        alert('Please enter a name.');
        return false;
        }

        if (mobileNumber === '') {
        alert('Please enter a mobile number.');
        return false;
        }

        if (address === '') {
        alert('Please enter a house address.');
        return false;
        }

        if (city === '') {
        alert('Please enter a city.');
        return false;
        }

        if (locality === '') {
        alert('Please enter a street.');
        return false;
        }

        if (pincode === '') {
        alert('Please enter a postal code/PIN.');
        return false;
        }

        return true;
    }

    if (validate(name, mobileNumber, address, city, locality, pincode)) {
        // Create an object with the form data
        const formData = {
            id:id,
        name: name,
        number: mobileNumber,
        houseAddress: address,
        city: city,
        street: locality,
        pin: pincode
        };

        // Send the form data to the server using AJAX
        fetch('/editAddress', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
        })
        //   .then(response => response.json())
        .then((response)=>{
            response.json()
            location.reload()
            

        })
        .then(data => {
            // Handle the server response
            // ...
        })
        .catch(error => {
            // Handle any error that occurred during the request
            console.error('Error:', error);
        });
        

        // Prevent the default form submission
        return false;
    }
    }

</script>

</body>


</html>